# yaml-language-server: $schema=config_schema.json

app:
  title: LakeAPI
  description: Test
  version: "0.1"
  static_file_path: assets
  logo_path: assets/logo-color.png

accounts:
  test_account:
    use_emulator: "true"

tables:
  - name: fruits
    tag: test
    version: 1
    api_method:
      - get
      - post
    params:
      - name: cars
        operators:
          - "="
          - in
      - name: fruits
        operators:
          - "="
          - in
      - name: A
        operators:
          - "="
          - in
      - name: pk
        combi:
          - fruits
          - cars
      - name: combi
        combi:
          - fruits
          - cars
      - name: combiint
        combi:
          - A
          - cars
          - B
    datasource:
      uri: delta/fruits
      file_type: delta

  - name: fruits_date
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/dates
      file_type: delta
    params:
      - name: date_field
        operators: ["=", ">", "<", ">=", "<="]

  - name: fruits_sortby_asc
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/fruits
      file_type: delta
      sortby:
        - by: B

  - name: fruits_sortby_desc
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/fruits
      file_type: delta
      sortby:
        - by: A
          direction: desc

  - name: fake_duck
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: duckdb/faker.db
      file_type: duckdb
      table_name: fake
    params:
      - name: name
        operators:
          - "="
          - "in"

  - name: fruits_duck
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: duckdb/fruits.db
      file_type: duckdb
      table_name: fruits
    params:
      - name: fruits
        operators:
          - "="
          - in
      - name: cars
        operators:
          - "="
          - "in"

  - name: fruits_sqlite
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: sqlite/fruits.sqlite
      file_type: sqlite
      table_name: fruits
    params:
      - name: fruits
        operators:
          - "="
          - in
      - name: cars
        operators:
          - "="
          - "in"

  - name: fruits_partition
    tag: test
    version: 1
    api_method:
      - get
      - post
    params:
      - name: fruits
        operators:
          - "="
          - in
      - name: pk
        combi:
          - fruits
          - cars
      - name: combi
        combi:
          - fruits
          - cars
    datasource:
      uri: delta/fruits_partition
      file_type: delta
      select:
        - name: A
        - name: fruits
        - name: B
        - name: cars
        - name: my_empty_col

  - name: fruits_partition_mod
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/fruits_partition_mod
    params:
      - name: cars
        operators:
          - "="
          - "in"

  - name: fruits_partition_int
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/fruits_partition_int
    params:
      - name: A
        operators:
          - "="

  - name: fruits_nested
    tag: test
    version: 1
    api_method:
      - get
    datasource:
      uri: delta/fruits_nested
    params:
      - name: cars
        operators:
          - "="
      - name: fruits
        operators:
          - "="

  - name: fake_delta
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: name
        operators:
          - "="
      - name: name1
        operators:
          - "="
      - name: fakeparam
        operators:
          - "="
    nearby:
      - name: nearby
        lat_col: geo_lat
        lon_col: geo_lon
    datasource:
      uri: delta/fake
      file_type: delta

  - name: fake_delta_partition
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: name
        operators:
          - "="
      - name: name1
        operators:
          - "="
    datasource:
      uri: delta/fake
      file_type: delta

  - name: fruits_csv
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: fruits
        operators:
          - "="
      - name: cars
        operators:
          - "="
    datasource:
      uri: csv/fruits.csv
      file_type: csv

  - name: fruits_json
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: fruits
        operators:
          - "="
      - name: cars
        operators:
          - "="
    datasource:
      uri: json/fruits.json
      file_type: json

  - name: fruits_avro
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: fruits
        operators:
          - "="
      - name: cars
        operators:
          - "="
    datasource:
      uri: avro/fruits.avro
      file_type: avro

  - name: fruits_ndjson
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: fruits
        operators:
          - "="
      - name: cars
        operators:
          - "="
    datasource:
      uri: ndjson/fruits.ndjson
      file_type: ndjson

  - name: fake_arrow
    tag: test
    version: 1
    allow_get_all_pages: true
    api_method:
      - get
      - post
    params:
      - name: name
        operators:
          - "="
      - name: name1
        operators:
          - "="
    datasource:
      uri: arrow/fake.arrow
      file_type: arrow

  - name: fake_parquet
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: parquet/fake.parquet
      file_type: parquet

  - name: fake_parquet_ns
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: parquet/fake_ns.parquet
      file_type: parquet

  - name: fake_duckdb
    tag: test
    version: 1
    engine: duckdb
    api_method:
      - get
      - post
    params:
      - name: abc
        operators:
          - "="
          - in
    datasource:
      uri: delta/fake
      file_type: delta

  - name: fake_polars
    tag: test
    version: 1
    engine: polars
    api_method:
      - get
      - post
    params:
      - name: abc
        operators:
          - "="
          - in
    datasource:
      uri: delta/fake
      file_type: delta

  - name: fruits_select
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: delta/fruits
      select:
        - name: fruits
          alias: fruits_new

  - name: search_sample
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: parquet/search.parquet
      file_type: parquet
      sortby:
        - by: "randomdata"
    search:
      - name: search
        columns:
          - "email"
          - "name"
          - "address"

  - name: not_existing
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: b/not_existing.parquet
      file_type: parquet

  - name: not_existing2
    tag: test
    version: 1
    api_method:
      - get
      - post
    datasource:
      uri: b/not_existing
      file_type: delta

  - name: "*" # We're lazy and want to expose all in that folder
    tag: startest
    version: 1
    api_method:
      - post
    datasource:
      uri: startest/*
      file_type: delta

  - name: fruits # But we want to overwrite this one
    tag: startest
    version: 1
    api_method:
      - get

  - name: complex_fruits
    tag: complexer
    api_method: post
    datasource:
      uri: delta/struct_fruits
      file_type: delta
    config_from_delta: true

  - name: weather
    tag: array
    api_method: [post, get]
    datasource:
      uri: delta/weather
      file_type: delta
    config_from_delta: true
    params:
      - name: temperatures
        operators:
          - has

  - name: table_w_col_map
    tag: deltatest
    api_method: [get, post]
    datasource:
      uri: delta/table_w_col_map
      file_type: delta
    params:
      - name: "Super Name_"

  - name: sqlite_customers
    tag: sqlite
    api_method: get
    datasource:
      file_type: sqlite
      uri: chinook.db
      table_name: customers
    params:
      - Country
      - name: CustomerId
        operators: [">", "=", "<=", "<"]

  - name: mssql_department
    tag: mssql
    api_method: get
    engine: odbc
    datasource:
      uri: DRIVER={ODBC Driver 18 for SQL Server};SERVER=127.0.0.1,1439;ENCRYPT=yes;TrustServerCertificate=Yes;UID=sa;PWD=${MY_SQL_PWD};Database=AdventureWorks
      table_name: "HumanResources.Department"
    params:
      - GroupName

  - name: blob_test
    tag: blobb
    api_method: get
    datasource:
      uri: "az://testlake/td/faker.parquet"
      file_type: parquet
      account: "test_account"

  - name: "*"
    tag: blobb
    api_method: get
    datasource:
      uri: "az://testlake/td/delta/*"
      file_type: delta
      account: "test_account"
      copy_local: true
    config_from_delta: true
# --------------------------------
#Â User / Password
# --------------------------------

users:
  - name: test
    passwordhash: $argon2id$v=19$m=65536,t=3,p=4$Ak+KC+inscKVIsyIcbg3Fg$xpM+5evoHbkxsKAW5mCPrFg71H5TcBgOFkiumF3tT/Q
